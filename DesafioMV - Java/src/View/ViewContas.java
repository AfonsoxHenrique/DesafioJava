/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Class.ClientePF;
import Class.ClientePJ;
import Class.Contas;
import Data.DadosClientePF;
import Data.DadosClientePJ;
import Data.DadosContas;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pichau
 */
public class ViewContas extends javax.swing.JFrame {

    /**
     * Creates new form ViewContas
     */
    public ViewContas() {
        initComponents();
        setLocationRelativeTo(null);
    }
    ArrayList<ClientePJ> respostaClientePJ = new ArrayList();
    ArrayList<ClientePF> respostaClientePF = new ArrayList();
    ArrayList<Contas> respostaContas = new ArrayList();
    ArrayList<Contas> respostaContasPJ = new ArrayList();

    private void ListarCnpjTable() {
        try {
            try {
                ClientePJ clientepj = new ClientePJ();
                DadosClientePJ dadosClientePJ = new DadosClientePJ();
                this.respostaClientePJ = dadosClientePJ.listarClientePJ(clientepj);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Razão Social", "CNPJ", "Empresa"});
                for (ClientePJ c : this.respostaClientePJ) {
                    modelo.addRow(new Object[]{c.getRazaoSocial(), c.getCnpj(), c.getNomeEmpresa()});
                }
                jTableListarClientes.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private void ListarCpfTable() {
        try {
            try {
                ClientePF clientepf = new ClientePF();
                DadosClientePF dadosClientePF = new DadosClientePF();
                this.respostaClientePF = dadosClientePF.listarClientePF(clientepf);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Nome", "CPF", "Telefone"});
                for (ClientePF c : this.respostaClientePF) {
                    modelo.addRow(new Object[]{c.getNome(), c.getCpf(), c.getTelefone_PF()});
                }
                jTableListarClientes.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private void ListarContas() {
        if (jRadioButtonPessoaFisica.isSelected() == true) {
            try {
                Contas contas = new Contas();
                DadosContas dadosContas = new DadosContas();
                this.respostaContas = dadosContas.listarContasPF(contas);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Número da Conta", "CPF", "Nome", "Movimentação"});
                for (Contas c : this.respostaContas) {
                    modelo.addRow(new Object[]{c.getNumeroConta(), c.getCpfDonoConta(), c.getNomeDonoConta(), c.getMovimentacao()});
                }
                jTableListarClientes.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if (jRadioButtonPessoaJuridica.isSelected() == true) {
            try {
                Contas contas = new Contas();
                DadosContas dadosContas = new DadosContas();
                this.respostaContas = dadosContas.listarConta(contas);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Número Conta", "CNPJ", "Razão Social", "Movimentação"});
                for (Contas c : this.respostaContas) {
                    modelo.addRow(new Object[]{c.getNumeroConta(), c.getCnpjDonoConta(), c.getRazaoSocialDonoConta(), c.getMovimentacao()});
                }
                jTableListarClientes.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListarClientes = new javax.swing.JTable();
        jTextFieldContaNome = new javax.swing.JTextField();
        jLabelNomeCliente = new javax.swing.JLabel();
        jLabelNumConta = new javax.swing.JLabel();
        jTextFieldNumeroConta = new javax.swing.JTextField();
        jLabelCpfCnpjDono = new javax.swing.JLabel();
        jTextFieldCPFDonoConta = new javax.swing.JTextField();
        jRadioButtonPessoaJuridica = new javax.swing.JRadioButton();
        jRadioButtonPessoaFisica = new javax.swing.JRadioButton();
        jLabelMovimentacao = new javax.swing.JLabel();
        jTextFieldMovimentacao = new javax.swing.JTextField();
        jButtonListarContas = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonSelecionar = new javax.swing.JButton();
        jButtonCadastrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelEditarConta = new javax.swing.JLabel();
        jTextFieldEditarConta = new javax.swing.JTextField();
        jLabelEditarMovimentacao = new javax.swing.JLabel();
        jTextFieldEditarMovimentacao = new javax.swing.JTextField();
        jButtonEditar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEditNomeRazao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldEditCpfCnpj = new javax.swing.JTextField();
        jButtonEdicao = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTableListarClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableListarClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListarClientesMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableListarClientesMousePressed(evt);
            }
        });
        jTableListarClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTableListarClientesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListarClientes);

        jTextFieldContaNome.setEditable(false);
        jTextFieldContaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContaNomeActionPerformed(evt);
            }
        });

        jLabelNomeCliente.setText("Nome/Razão");

        jLabelNumConta.setText("Numero da Conta");

        jTextFieldNumeroConta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNumeroContaKeyTyped(evt);
            }
        });

        jLabelCpfCnpjDono.setText("CPF/CNPJ do dono");

        jTextFieldCPFDonoConta.setEditable(false);

        buttonGroup1.add(jRadioButtonPessoaJuridica);
        jRadioButtonPessoaJuridica.setText("PJ");
        jRadioButtonPessoaJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPessoaJuridicaActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonPessoaFisica);
        jRadioButtonPessoaFisica.setText("PF");
        jRadioButtonPessoaFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPessoaFisicaActionPerformed(evt);
            }
        });

        jLabelMovimentacao.setText("Movimentação");

        jTextFieldMovimentacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMovimentacaoKeyTyped(evt);
            }
        });

        jButtonListarContas.setText("Listar contas");
        jButtonListarContas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarContasActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButtonSelecionar.setText("Cadastro");
        jButtonSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelecionarActionPerformed(evt);
            }
        });

        jButtonCadastrar.setText("Cadastrar");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Cadastrar");

        jLabel2.setText("Editar");

        jLabelEditarConta.setText("Conta");

        jTextFieldEditarConta.setEditable(false);

        jLabelEditarMovimentacao.setText("Editar Movimentação");

        jTextFieldEditarMovimentacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldEditarMovimentacaoKeyTyped(evt);
            }
        });

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome/Razão");

        jTextFieldEditNomeRazao.setEditable(false);

        jLabel4.setText("CPF/CNPJ ");

        jTextFieldEditCpfCnpj.setEditable(false);

        jButtonEdicao.setText("Edição");
        jButtonEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEdicaoActionPerformed(evt);
            }
        });

        jLabel5.setText("Liste as contas e clique uma vez para selecionar e duas vezes para remover");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelCpfCnpjDono)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextFieldCPFDonoConta, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabelNumConta)
                                                .addGap(10, 10, 10)
                                                .addComponent(jTextFieldNumeroConta, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelMovimentacao)
                                                    .addComponent(jLabelNomeCliente))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextFieldContaNome, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                                    .addComponent(jTextFieldMovimentacao)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addComponent(jLabel1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jButtonCadastrar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(95, 95, 95)
                                                .addComponent(jLabel2))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelEditarConta)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel4))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextFieldEditarConta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTextFieldEditNomeRazao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTextFieldEditCpfCnpj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelEditarMovimentacao)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextFieldEditarMovimentacao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jButtonEditar, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonSelecionar)
                        .addGap(8, 8, 8)
                        .addComponent(jButtonEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonListarContas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonPessoaFisica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonPessoaJuridica)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSelecionar)
                            .addComponent(jButtonEdicao)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonPessoaJuridica)
                            .addComponent(jRadioButtonPessoaFisica)
                            .addComponent(jButtonListarContas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelNumConta)
                                    .addComponent(jTextFieldNumeroConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldMovimentacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelMovimentacao))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldContaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelNomeCliente))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldCPFDonoConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCpfCnpjDono))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCadastrar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelEditarMovimentacao)
                                    .addComponent(jTextFieldEditarMovimentacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldEditarConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelEditarConta))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextFieldEditNomeRazao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextFieldEditCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonEditar)))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldContaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContaNomeActionPerformed

    }//GEN-LAST:event_jTextFieldContaNomeActionPerformed

    private void jRadioButtonPessoaFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPessoaFisicaActionPerformed
        ListarCpfTable();
    }//GEN-LAST:event_jRadioButtonPessoaFisicaActionPerformed

    private void jTableListarClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListarClientesMousePressed
        jTableListarClientes.editingCanceled(null);
        jTableListarClientes.editingStopped(null);
    }//GEN-LAST:event_jTableListarClientesMousePressed

    private void jTableListarClientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListarClientesKeyTyped
        jTableListarClientes.editingCanceled(null);
        jTableListarClientes.editingStopped(null);
    }//GEN-LAST:event_jTableListarClientesKeyTyped

    private void jRadioButtonPessoaJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPessoaJuridicaActionPerformed
        ListarCnpjTable();
    }//GEN-LAST:event_jRadioButtonPessoaJuridicaActionPerformed

    private void jTableListarClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListarClientesMouseClicked

        int index = jTableListarClientes.getSelectedRow();
        int click = evt.getClickCount();
        if (jRadioButtonPessoaFisica.isSelected() == true) {
            try {
                if (click == 2) {
                    if (index >= 0) {
                        Contas contas = this.respostaContas.get(index);
                        String mensagem = "Deseja remover esta conta?\nNúmero da Conta: " + contas.getNumeroConta()+ "\nCPF: " + contas.getCpfDonoConta()+ "\nNome: " + contas.getNomeDonoConta() + "\nMovimentação:" + contas.getMovimentacao();
                        int resultado = JOptionPane.showConfirmDialog(this, mensagem, "Remover cliente", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (resultado == JOptionPane.YES_OPTION) {
                            DadosContas dadosContas = new DadosContas();
                            dadosContas.excluirConta(contas);
                            ListarCpfTable();
                            JOptionPane.showMessageDialog(this, "Conta removida", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        }
        if (jRadioButtonPessoaJuridica.isSelected() == true) {
            try {
                if (click == 2) {
                    if (index >= 0) {
                        Contas contas = this.respostaContas.get(index);
                        String mensagem = "Deseja remover esta conta?\nNúmero da Conta: " + contas.getNumeroConta()+ "\nCNPJ: " + contas.getCnpjDonoConta()+ "\nRazão Social: " + contas.getRazaoSocialDonoConta()+ "\nMovimentação:" + contas.getMovimentacao();
                        int resultado = JOptionPane.showConfirmDialog(this, mensagem, "Remover cliente", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (resultado == JOptionPane.YES_OPTION) {
                            DadosContas dadosContas = new DadosContas();
                            dadosContas.excluirConta(contas);
                            ListarCpfTable();
                            JOptionPane.showMessageDialog(this, "Conta removido", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTableListarClientesMouseClicked

    private void jButtonListarContasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarContasActionPerformed
        if(jRadioButtonPessoaFisica.isSelected() == false && jRadioButtonPessoaJuridica.isSelected() == false)
        {
            JOptionPane.showMessageDialog(this, "Selecione o tipo de pessoa (PF/PJ)", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
        ListarContas();       
    }//GEN-LAST:event_jButtonListarContasActionPerformed

    private void jButtonSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelecionarActionPerformed
        int index = jTableListarClientes.getSelectedRow();
        if (jRadioButtonPessoaFisica.isSelected() == true) {
            try {
                if (index >= 0) {
                    ClientePF clientepf = this.respostaClientePF.get(index);
                    jTextFieldContaNome.setText(clientepf.getNome());
                    jTextFieldCPFDonoConta.setText(clientepf.getCpf());
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        }
        if (jRadioButtonPessoaJuridica.isSelected() == true) {
            try {
                if (index >= 0) {
                    ClientePJ clientepj = this.respostaClientePJ.get(index);
                    jTextFieldContaNome.setText(clientepj.getRazaoSocial());
                    jTextFieldCPFDonoConta.setText(clientepj.getCnpj());
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonSelecionarActionPerformed

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed
        if (jRadioButtonPessoaFisica.isSelected() == true) {
            try {
                Contas contas = new Contas();
                contas.setCpfDonoConta(jTextFieldCPFDonoConta.getText());
                contas.setNomeDonoConta(jTextFieldContaNome.getText());
                contas.setNumeroConta(Integer.parseInt(jTextFieldNumeroConta.getText()));
                contas.setMovimentacao(Integer.parseInt(jTextFieldMovimentacao.getText()));

                DadosContas dadosContas = new DadosContas();
                dadosContas.cadastrarConta(contas);
                JOptionPane.showMessageDialog(this, "Conta cadastrada", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (jRadioButtonPessoaJuridica.isSelected() == true) {
            try {
                Contas contas = new Contas();
                contas.setCnpjDonoConta(jTextFieldCPFDonoConta.getText());
                contas.setRazaoSocialDonoConta(jTextFieldContaNome.getText());
                contas.setNumeroConta(Integer.parseInt(jTextFieldNumeroConta.getText()));
                contas.setMovimentacao(Integer.parseInt(jTextFieldMovimentacao.getText()));

                DadosContas dadosContas = new DadosContas();
                dadosContas.cadastrarContaPJ(contas);
                JOptionPane.showMessageDialog(this, "Conta cadastrada", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        }
        jTextFieldCPFDonoConta.setText("");
        jTextFieldContaNome.setText("");
        jTextFieldMovimentacao.setText("");
        jTextFieldNumeroConta.setText("");
    }//GEN-LAST:event_jButtonCadastrarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        if(jRadioButtonPessoaFisica.isSelected() == true)
        {
            try {
                Contas contas = new Contas();
                contas.setMovimentacao(Integer.parseInt(jTextFieldEditarMovimentacao.getText()));
                contas.setNumeroConta(Integer.parseInt(jTextFieldEditarConta.getText()));

                DadosContas dadosContas = new DadosContas();
                dadosContas.editarConta(contas);
                JOptionPane.showMessageDialog(this, "Conta editada", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldEditarMovimentacao.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(jRadioButtonPessoaJuridica.isSelected() == true)
        {
            try {
                Contas contas = new Contas();
                contas.setMovimentacao(Integer.parseInt(jTextFieldEditarMovimentacao.getText()));
                contas.setNumeroConta(Integer.parseInt(jTextFieldEditarConta.getText()));

                DadosContas dadosContas = new DadosContas();
                dadosContas.editarConta(contas);
                JOptionPane.showMessageDialog(this, "Conta editada", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                jTextFieldEditarMovimentacao.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEdicaoActionPerformed
        if(jRadioButtonPessoaFisica.isSelected() == true)
        {
            int index = jTableListarClientes.getSelectedRow();
            try
            {
                if(index >=0)
                {
                    Contas contas = this.respostaContas.get(index);
                    jTextFieldEditCpfCnpj.setText(contas.getCpfDonoConta());
                    jTextFieldEditarConta.setText(Integer.toString(contas.getNumeroConta()));
                    jTextFieldEditNomeRazao.setText(contas.getNomeDonoConta());
                    jTextFieldEditarMovimentacao.setText(Double.toString(contas.getMovimentacao()));                    
                }    
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }
        }
        if(jRadioButtonPessoaJuridica.isSelected() == true)
        {
            int index = jTableListarClientes.getSelectedRow();
            try
            {
                if(index >=0)
                {
                    Contas contas = this.respostaContas.get(index);
                    jTextFieldEditCpfCnpj.setText(contas.getCnpjDonoConta());
                    jTextFieldEditarConta.setText(Integer.toString(contas.getNumeroConta()));
                    jTextFieldEditNomeRazao.setText(contas.getRazaoSocialDonoConta());
                    jTextFieldEditarMovimentacao.setText(Double.toString(contas.getMovimentacao()));
                }    
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Aviso", JOptionPane.ERROR_MESSAGE);
            }    
        }
    }//GEN-LAST:event_jButtonEdicaoActionPerformed

    private void jTextFieldNumeroContaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumeroContaKeyTyped
        String caracteres = "0123456789";       
        if(!caracteres.contains(evt.getKeyChar() + ""))
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldNumeroContaKeyTyped

    private void jTextFieldMovimentacaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMovimentacaoKeyTyped
        String caracteres = "0123456789";       
        if(!caracteres.contains(evt.getKeyChar() + ""))
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldMovimentacaoKeyTyped

    private void jTextFieldEditarMovimentacaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEditarMovimentacaoKeyTyped
        String caracteres = "0123456789";       
        if(!caracteres.contains(evt.getKeyChar() + ""))
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldEditarMovimentacaoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewContas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewContas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JButton jButtonEdicao;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonListarContas;
    private javax.swing.JButton jButtonSelecionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelCpfCnpjDono;
    private javax.swing.JLabel jLabelEditarConta;
    private javax.swing.JLabel jLabelEditarMovimentacao;
    private javax.swing.JLabel jLabelMovimentacao;
    private javax.swing.JLabel jLabelNomeCliente;
    private javax.swing.JLabel jLabelNumConta;
    private javax.swing.JRadioButton jRadioButtonPessoaFisica;
    private javax.swing.JRadioButton jRadioButtonPessoaJuridica;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableListarClientes;
    private javax.swing.JTextField jTextFieldCPFDonoConta;
    private javax.swing.JTextField jTextFieldContaNome;
    private javax.swing.JTextField jTextFieldEditCpfCnpj;
    private javax.swing.JTextField jTextFieldEditNomeRazao;
    private javax.swing.JTextField jTextFieldEditarConta;
    private javax.swing.JTextField jTextFieldEditarMovimentacao;
    private javax.swing.JTextField jTextFieldMovimentacao;
    private javax.swing.JTextField jTextFieldNumeroConta;
    // End of variables declaration//GEN-END:variables
}
