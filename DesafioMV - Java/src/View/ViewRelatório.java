/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Class.ClientePF;
import Class.ClientePJ;
import Class.Contas;
import Data.DadosClientePF;
import Data.DadosClientePJ;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pichau
 */
public class ViewRelatório extends javax.swing.JFrame {

    /**
     * Creates new form ViewRelatório
     */
    public ViewRelatório() {
        initComponents();
        setLocationRelativeTo(null);
    }
    ArrayList<ClientePJ> respostaClientePJ = new ArrayList();
    ArrayList<ClientePF> respostaClientePF = new ArrayList();
    ArrayList<Contas> respostaContas = new ArrayList();
    ArrayList<Contas> respostaContasPJ = new ArrayList();
    
    private void ListarCnpjTable() {
        try {
            try {
                ClientePJ clientepj = new ClientePJ();
                DadosClientePJ dadosClientePJ = new DadosClientePJ();
                this.respostaClientePJ = dadosClientePJ.listarClientePJ(clientepj);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Razão Social", "CNPJ", "Empresa"});
                for (ClientePJ c : this.respostaClientePJ) {
                    modelo.addRow(new Object[]{c.getRazaoSocial(), c.getCnpj(), c.getNomeEmpresa()});
                }
                jTableListarClientes.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private void ListarCpfTable() {
        try {
            try {
                ClientePF clientepf = new ClientePF();
                DadosClientePF dadosClientePF = new DadosClientePF();
                this.respostaClientePF = dadosClientePF.listarClientePF(clientepf);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Nome", "CPF", "Telefone"});
                for (ClientePF c : this.respostaClientePF) {
                    modelo.addRow(new Object[]{c.getNome(), c.getCpf(), c.getTelefone_PF()});
                }
                jTableListarClientes.setModel(modelo);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListarClientes = new javax.swing.JTable();
        jRadioButtonPessoaFisica = new javax.swing.JRadioButton();
        jRadioButtonPessoaJuridica = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldPesquisarCPFCNPJ = new javax.swing.JTextField();
        jButtonPesquisarCPFCNPJ = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableListarClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableListarClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListarClientesMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableListarClientesMousePressed(evt);
            }
        });
        jTableListarClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTableListarClientesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListarClientes);

        buttonGroup1.add(jRadioButtonPessoaFisica);
        jRadioButtonPessoaFisica.setText("Pessoa Física");
        jRadioButtonPessoaFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPessoaFisicaActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonPessoaJuridica);
        jRadioButtonPessoaJuridica.setText("Pessoa Jurídica");
        jRadioButtonPessoaJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPessoaJuridicaActionPerformed(evt);
            }
        });

        jLabel1.setText("Clique duas vezes em algum cliente para gerar um relatório");

        jTextFieldPesquisarCPFCNPJ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarCPFCNPJKeyTyped(evt);
            }
        });

        jButtonPesquisarCPFCNPJ.setText("Pesquisar");
        jButtonPesquisarCPFCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarCPFCNPJActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonPesquisarCPFCNPJ)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldPesquisarCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jRadioButtonPessoaFisica)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jRadioButtonPessoaJuridica))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonPessoaFisica)
                    .addComponent(jRadioButtonPessoaJuridica)
                    .addComponent(jTextFieldPesquisarCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisarCPFCNPJ))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonPessoaJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPessoaJuridicaActionPerformed
        ListarCnpjTable();
        jButtonPesquisarCPFCNPJ.setText("Pesquisar CNPJ");
    }//GEN-LAST:event_jRadioButtonPessoaJuridicaActionPerformed

    private void jRadioButtonPessoaFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPessoaFisicaActionPerformed
        ListarCpfTable();
        jButtonPesquisarCPFCNPJ.setText("Pesquisar CPF");
    }//GEN-LAST:event_jRadioButtonPessoaFisicaActionPerformed

    private void jTableListarClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListarClientesMousePressed
        jTableListarClientes.editingCanceled(null);
        jTableListarClientes.editingStopped(null);
    }//GEN-LAST:event_jTableListarClientesMousePressed

    private void jTableListarClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListarClientesMouseClicked
        int index = jTableListarClientes.getSelectedRow();
        int click = evt.getClickCount();
        if (jRadioButtonPessoaFisica.isSelected() == true) {
            try {
                if (click == 2) {
                    if (index >= 0) {
                        ClientePF clientepf = this.respostaClientePF.get(index);
                        String mensagem = "\nCliente: " + clientepf.getNome()+ 
                                          "\nCPF: " + clientepf.getCpf()+ 
                                          "\nTelefone: " + clientepf.getTelefone_PF()+ 
                                          "\nData de Cadastro: " + clientepf.getDataCadastro_PF()+
                                          "\nEstado: " + clientepf.getEstado_PF()+
                                          "\nEndereço: " + clientepf.getEndereco_PF()+
                                          "\nCidade: " + clientepf.getCidade_PF()+
                                          "\nBairro: " + clientepf.getBairro_PF();
                        JOptionPane.showMessageDialog(rootPane, mensagem);
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        }
        if (jRadioButtonPessoaJuridica.isSelected() == true) {
            try {
                if (click == 2) {
                    if (index >= 0) {
                        ClientePJ clientepj = this.respostaClientePJ.get(index);
                        String mensagem = "\nCliente: " + clientepj.getRazaoSocial()+ 
                                          "\nCNPJ: " + clientepj.getCnpj()+
                                          "\nEmpresa: " + clientepj.getNomeEmpresa()+
                                          "\nTelefone: " + clientepj.getTelefone_PJ()+ 
                                          "\nData de Cadastro: " + clientepj.getDataCadastro_PJ()+
                                          "\nEstado: " + clientepj.getEstado_PJ()+
                                          "\nEndereço: " + clientepj.getEndereco_PJ()+
                                          "\nCidade: " + clientepj.getCidade_PJ()+
                                          "\nBairro: " + clientepj.getBairro_PJ();
                        JOptionPane.showMessageDialog(rootPane, mensagem);
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jTableListarClientesMouseClicked

    private void jTableListarClientesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListarClientesKeyTyped
        jTableListarClientes.editingCanceled(null);
        jTableListarClientes.editingStopped(null);
    }//GEN-LAST:event_jTableListarClientesKeyTyped

    private void jTextFieldPesquisarCPFCNPJKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarCPFCNPJKeyTyped
         String caracteres = "0123456789";
        if(!caracteres.contains(evt.getKeyChar() + ""))
        {
            evt.consume();
        }
    }//GEN-LAST:event_jTextFieldPesquisarCPFCNPJKeyTyped

    private void jButtonPesquisarCPFCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarCPFCNPJActionPerformed
         try {
            if (jRadioButtonPessoaFisica.isSelected() == true) {
                ClientePF clientepf = new ClientePF();
                DadosClientePF dadosClientePF = new DadosClientePF();
                clientepf.setCpf(jTextFieldPesquisarCPFCNPJ.getText());
                this.respostaClientePF = dadosClientePF.listarClientePF(clientepf);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Nome", "CPF", "Telefone"});

                for (ClientePF c : this.respostaClientePF) {
                    modelo.addRow(new Object[]{c.getNome(), c.getCpf(), c.getTelefone_PF()});
                }
                jTableListarClientes.setModel(modelo);
            }
            if (jRadioButtonPessoaJuridica.isSelected() == true) {
                ClientePJ clientepj = new ClientePJ();
                DadosClientePJ dadosClientePJ = new DadosClientePJ();
                clientepj.setCnpj(jTextFieldPesquisarCPFCNPJ.getText());
                this.respostaClientePJ = dadosClientePJ.listarClientePJ(clientepj);
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.setColumnIdentifiers(new Object[]{"Razão Social", "CNPJ", "Empresa"});

                for (ClientePJ c : this.respostaClientePJ) {
                    modelo.addRow(new Object[]{c.getRazaoSocial(), c.getCnpj(), c.getNomeEmpresa()});
                }

                jTableListarClientes.setModel(modelo);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonPesquisarCPFCNPJActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewRelatório.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewRelatório.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewRelatório.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewRelatório.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewRelatório().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonPesquisarCPFCNPJ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButtonPessoaFisica;
    private javax.swing.JRadioButton jRadioButtonPessoaJuridica;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListarClientes;
    private javax.swing.JTextField jTextFieldPesquisarCPFCNPJ;
    // End of variables declaration//GEN-END:variables
}
